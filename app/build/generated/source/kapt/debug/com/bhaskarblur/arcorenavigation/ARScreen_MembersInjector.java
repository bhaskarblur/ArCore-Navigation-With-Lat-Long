// Generated by Dagger (https://dagger.dev).
package com.bhaskarblur.arcorenavigation;

import android.hardware.SensorManager;
import android.location.LocationManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ARScreen_MembersInjector implements MembersInjector<ARScreen> {
  private final Provider<SensorManager> sensorManagerProvider;

  private final Provider<LocationManager> locationManagerProvider;

  public ARScreen_MembersInjector(Provider<SensorManager> sensorManagerProvider,
      Provider<LocationManager> locationManagerProvider) {
    this.sensorManagerProvider = sensorManagerProvider;
    this.locationManagerProvider = locationManagerProvider;
  }

  public static MembersInjector<ARScreen> create(Provider<SensorManager> sensorManagerProvider,
      Provider<LocationManager> locationManagerProvider) {
    return new ARScreen_MembersInjector(sensorManagerProvider, locationManagerProvider);
  }

  @Override
  public void injectMembers(ARScreen instance) {
    injectSensorManager(instance, sensorManagerProvider.get());
    injectLocationManager(instance, locationManagerProvider.get());
  }

  @InjectedFieldSignature("com.bhaskarblur.arcorenavigation.ARScreen.sensorManager")
  public static void injectSensorManager(ARScreen instance, SensorManager sensorManager) {
    instance.sensorManager = sensorManager;
  }

  @InjectedFieldSignature("com.bhaskarblur.arcorenavigation.ARScreen.locationManager")
  public static void injectLocationManager(ARScreen instance, LocationManager locationManager) {
    instance.locationManager = locationManager;
  }
}
